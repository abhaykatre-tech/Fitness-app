

services:
  # ---------------- DATABASES ----------------
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Abhay@123
      MYSQL_DATABASE: fitness_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  # ---------------- KAFKA + ZOOKEEPER ----------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  # ---------------- KEYCLOAK ----------------
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8181:8080"
    networks:
      - app-network

  # ---------------- CONFIG SERVICE ----------------
  config-service:
    build: ./config-service
    container_name: config-service
    ports:
      - "8888:8888"
    networks:
      - app-network

  # ---------------- EUREKA SERVER ----------------
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      - config-service
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888/
    networks:
      - app-network

  # ---------------- USER SERVICE ----------------
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "3001:3001"
    depends_on:
      - mysql
      - eureka-server
      - config-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/fitness_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=Abhay@123
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888/
      - SPRING_APPLICATION_JSON={"eureka":{"client":{"service-url":{"defaultZone":"http://eureka-server:8761/eureka/"}}}}
    networks:
      - app-network

  # ---------------- ACTIVE SERVICE ----------------
  active-service:
    build: ./active-service
    container_name: active-service
    ports:
      - "3002:3002"
    depends_on:
      - mongodb
      - kafka
      - eureka-server
      - config-service
      - user-service
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888/
      - SPRING_APPLICATION_JSON={"eureka":{"client":{"service-url":{"defaultZone":"http://eureka-server:8761/eureka/"}}}}
    networks:
      - app-network

  # ---------------- AI SERVICE ----------------
  ai-service:
    build: ./ai-service
    container_name: ai-service
    ports:
      - "3003:3003"
    depends_on:
      - mongodb
      - kafka
      - eureka-server
      - config-service
      - active-service
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888/
      - SPRING_APPLICATION_JSON={"eureka":{"client":{"service-url":{"defaultZone":"http://eureka-server:8761/eureka/"}}}}
      - gemini_url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent
      - gemini_key=AIzaSyBsmbZt_eOmuFc8S0u6N5BEvK84MtSTdro
    networks:
      - app-network

  # ---------------- GATEWAY ----------------
  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "9999:9999"
    depends_on:
      - eureka-server
      - user-service
      - active-service
      - ai-service
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888/
      - SPRING_APPLICATION_JSON={"eureka":{"client":{"service-url":{"defaultZone":"http://eureka-server:8761/eureka/"}}}}
    networks:
      - app-network

  # ---------------- FRONTEND ----------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - gateway
    networks:
      - app-network

volumes:
  mysql_data:
  mongo_data:

networks:
  app-network:
    driver: bridge
